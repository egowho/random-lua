local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/main/source.lua", true))()

local Window = Luna:CreateWindow({
	Name = "Egos Hub", 
	Subtitle = nil, 
	LogoID = "82795327169782",
	LoadingEnabled = true,
	LoadingTitle = "Egos Hub",
	LoadingSubtitle = "by ego

	ConfigSettings = {
		RootFolder = 'Egos Hub', 
		ConfigFolder = "Big Hub" 
	},

	KeySystem = false,
	KeySettings = {
		Title = "Luna Example Key",
		Subtitle = "Key System",
		Note = "Best Key System Ever! Also, Please Use A HWID Keysystem like Pelican, Luarmor etc. that provide key strings based on your HWID since putting a simple string is very easy to bypass",
		SaveInRoot = false, 
		SaveKey = true, 
		Key = {"Example Key"}, 
		SecondAction = {
			Enabled = true,
			Type = "Link", 
			Parameter = "" 
		}
	}
})



game:GetService("Players").LocalPlayer.PlayerGui.HatchDisplay.Enabled = false

local MainTab = Window:CreateTab({
	Name = "Farm Tab",
	Icon = "house",
	ImageSource = "Material",
	ShowTitle = true
})


local EggTab = Window:CreateTab({
	Name = "Auto Open Eggs",
	Icon = "open_in_new",
	ImageSource = "Material",
	ShowTitle = true 
})


local TeleportTab = Window:CreateTab({
	Name = "Teleport Tab",
	Icon = "room",
	ImageSource = "Material",
	ShowTitle = true 
})





--// Farm Tab \\--





local BubbleToggle = MainTab:CreateToggle({
    Name = "Auto Click",
    Description = "Auto Click",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.AutoClickConnection = game:GetService("RunService").Heartbeat:Connect(function()
                    task.wait(0.001)
                    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Click"):FireServer()
            end)
        else
            if _G.AutoClickConnection then
                _G.AutoClickConnection:Disconnect()
            end
        end
    end
}, "AutoToggle")


local rebirthOptions = {
    "1", "5", "10", "25", "50", "100", "250", "500", "1k", "2.5k", "5k", "10k", "25k", "50k", "100k", "250k", "500k", 
    "1M", "2.5M", "5M", "10M", "25M", "50M", "100M", "250M", "500M", "1B", "2.5B", "5B", "10B", "25B", "50B", "100B", "250B", "500B", 
    "1T", "2.5T", "5T", "10T", "25T", "50T", "100T", "250T", "500T", "1Qa", "2.5Qa", "5Qa", "10Qa", "25Qa", "50Qa", "100Qa", "250Qa", "500Qa", 
    "1Qi", "2.5Qi", "5Qi", "10Qi", "25Qi", "50Qi", "100Qi", "250Qi", "500Qi", "1Sx", "2.5Sx", "5Sx", "10Sx", "25Sx", "50Sx", "100Sx", "250Sx", "500Sx", 
    "1Sp", "2.5Sp", "5Sp", "10Sp", "25Sp", "50Sp", "100Sp", "250Sp", "500Sp", "1Oc", "2.5Oc", "5Oc", "10Oc", "25Oc", "50Oc", "100Oc", "250Oc", "500Oc", 
    "1No", "2.5No", "5No", "10No", "25No", "50No", "100No", "250No", "500No", "1Dc", "2.5Dc", "5Dc", "10Dc", "25Dc", "50Dc", "100Dc", "250Dc", "500Dc", 
    "1Ud", "2.5Ud", "5Ud", "10Ud", "25Ud", "50Ud", "100Ud", "250Ud", "500Ud", "1Dd", "2.5Dd", "5Dd", "10Dd", "25Dd", "50Dd", "100Dd", "250Dd", "500Dd", 
    "1Td", "2.5Td", "5Td", "10Td", "25Td", "50Td", "100Td", "250Td", "500Td", "1Z", "2.5Z", "5Z", "10Z", "25Z", "50Z", "100Z", "250Z", "500Z", 
    "1Y", "2.5Y", "5Y", "10Y", "25Y", "50Y", "100Y", "250Y", "500Y", "1X", "2.5X", "5X", "10X", "25X", "50X", "100X", "250X", "500X", 
    "1W", "2.5W", "5W", "10W", "25W", "50W", "100W", "250W", "500W", "1V", "2.5V", "5V", "10V", "25V", "50V", "100V", "250V", "500V", 
    "1U", "2.5U", "5U", "10U", "25U", "50U", "100U", "250U", "500U", "1∞"
}


local RebirthDropdown = MainTab:CreateDropdown({
    Name = "Rebirth Option",
    Description = "Choose which rebirth to use",
    Options = rebirthOptions,
    CurrentOption = rebirthOptions[1],
    Callback = function(Selected) end
}, "RebirthDropdown")



local RebirthToggle = MainTab:CreateToggle({
    Name = "Auto Rebirth",
    Description = "Automatically rebirth based on the selected option",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.AutoRebirthConnection = game:GetService("RunService").Heartbeat:Connect(function()
                task.wait()
                local selectedRebirth = RebirthDropdown.CurrentOption
                local rebirthNumber = tonumber(selectedRebirth:match("%d+%.?%d*")) or 1
                task.wait()
                if selectedRebirth:find("k") then
                    rebirthNumber = rebirthNumber * 1e3 
                elseif selectedRebirth:find("M") then
                    rebirthNumber = rebirthNumber * 1e6 
                elseif selectedRebirth:find("B") then
                    rebirthNumber = rebirthNumber * 1e9 
                elseif selectedRebirth:find("T") then
                    rebirthNumber = rebirthNumber * 1e12
                elseif selectedRebirth:find("Qa") then
                    rebirthNumber = rebirthNumber * 1e15
                elseif selectedRebirth:find("Qi") then
                    rebirthNumber = rebirthNumber * 1e18
                elseif selectedRebirth:find("Sx") then
                    rebirthNumber = rebirthNumber * 1e21
                elseif selectedRebirth:find("Sp") then
                    rebirthNumber = rebirthNumber * 1e24
                elseif selectedRebirth:find("Oc") then
                    rebirthNumber = rebirthNumber * 1e27
                elseif selectedRebirth:find("No") then
                    rebirthNumber = rebirthNumber * 1e30
                elseif selectedRebirth:find("Dc") then
                    rebirthNumber = rebirthNumber * 1e33
                elseif selectedRebirth:find("Ud") then
                    rebirthNumber = rebirthNumber * 1e36
                elseif selectedRebirth:find("Dd") then
                    rebirthNumber = rebirthNumber * 1e39
                elseif selectedRebirth:find("Td") then
                    rebirthNumber = rebirthNumber * 1e42
                elseif selectedRebirth:find("Z") then
                    rebirthNumber = rebirthNumber * 1e45
                elseif selectedRebirth:find("Y") then
                    rebirthNumber = rebirthNumber * 1e48
                elseif selectedRebirth:find("X") then
                    rebirthNumber = rebirthNumber * 1e51
                elseif selectedRebirth:find("W") then
                    rebirthNumber = rebirthNumber * 1e54
                elseif selectedRebirth:find("V") then
                    rebirthNumber = rebirthNumber * 1e57
                elseif selectedRebirth:find("U") then
                    rebirthNumber = rebirthNumber * 1e60
                elseif selectedRebirth:find("∞") then
                    rebirthNumber = math.huge 
                end
                task.wait(0.1)
                local args = { [1] = rebirthNumber }
                game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Rebirth"):FireServer(unpack(args))
            end)
        else
            if _G.AutoRebirthConnection then
                _G.AutoRebirthConnection:Disconnect()
            end
        end
    end
}, "AutoRebirthToggle")




--// Egg Tab \\--


local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local mainGui = playerGui:WaitForChild("Main")
local leftHolder = mainGui:WaitForChild("LeftHolder")
local rightHolder = mainGui:WaitForChild("RightHolder")
local bottomHolder = mainGui:WaitForChild("BottomHolder")


local desiredPositions = {
    Left = UDim2.new(0, 0, 0.5, 0),
    Right = UDim2.new(1, 0, 0.5, 0),
    Bottom = UDim2.new(0.5, 0, 1, 0)
}


local function enforcePosition(element, desiredPosition)
    element:GetPropertyChangedSignal("Position"):Connect(function()
        if element.Position ~= desiredPosition then
            element.Position = desiredPosition
        end
    end)
end


enforcePosition(leftHolder, desiredPositions.Left)
enforcePosition(rightHolder, desiredPositions.Right)
enforcePosition(bottomHolder, desiredPositions.Bottom)


local eggOptions = {
    "Basic", 
    "Uncommon", 
    "Forest", 
    "Ice", 
    "Magic", 
    "Lava", 
    "Candy", 
    "1K",
    "Fantasy",
    "100K Orb", 
    "Season 1", 
    "Coconut", 
    "Underwater", 
    "Electro", 
    "100K Egg", 
    "Free Egg",
    "100K Orbit Egg", 
    "200K", 
    "Free Egg 2", 
    "200K Elemental", 
    "Classic", 
    "Mega Egg",
    "Time Egg", 
    "500K Egg", 
    "500K Part 2 Egg", 
    "DEMENTOR EGG", 
    "600K Egg",
    "Release", 
    "10K Event",
    "King", 
    "Sand", 
    "Electro", 
    "200K", 
    "600K Egg", 
    "100K", 
    "Meme", 
    "Easter", 
    "Spring", 
    "Mega Monster",
    "Limited", 
    "Leaderboard1", 
    "g"
}


local selectedEgg = eggOptions[1]
local EggDropdown = EggTab:CreateDropdown({
    Name = "Select Egg",
    Description = "Choose which egg to hatch",
    Options = eggOptions,
    CurrentOption = selectedEgg,
    Callback = function(Selected)
        selectedEgg = Selected
    end
}, "EggDropdown")


local hatchModes = { "Single", "Triple" }
local selectedHatchMode = "Triple" 


local HatchModeDropdown = EggTab:CreateDropdown({
    Name = "Hatch Mode",
    Description = "Choose to hatch Single or Triple",
    Options = hatchModes,
    CurrentOption = selectedHatchMode,
    Callback = function(Selected)
        selectedHatchMode = Selected
    end
}, "HatchModeDropdown")


local AutoHatchToggle = EggTab:CreateToggle({
    Name = "Auto Hatch",
    Description = "Automatically hatches the selected egg",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.AutoHatchConnection = game:GetService("RunService").Heartbeat:Connect(function()
                task.spawn(function()
                    task.wait()
                    local args = {
                        [1] = selectedEgg,
                        [2] = selectedHatchMode
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                end)
            end)
        else
            if _G.AutoHatchConnection then
                _G.AutoHatchConnection:Disconnect()
            end
        end
    end
}, "AutoHatchToggle")




--// Teleport Tab \\--





local islandOptions = {
    "100K Event",
    "600K Event",
    "Candy",
    "Easter",
    "Electro World",
    "Fantasy Spawn",
    "Forest",
    "Lava",
    "Magic",
    "Military Base",
    "Mystic",
    "Pixel World",
    "Shadow",
    "Spawn",
    "Swamp",
    "Time World",
    "Winter"
}


local selectedIsland = islandOptions[1] 
local IslandDropdown = TeleportTab:CreateDropdown({
    Name = "Select Island",
    Description = "Choose which island to teleport to",
    Options = islandOptions,
    CurrentOption = selectedIsland,
    Callback = function(Selected)
        selectedIsland = Selected 
    end
}, "IslandDropdown")


local TeleportButton = TeleportTab:CreateButton({
    Name = "Click To Teleport",
    Description = nil, 
    Callback = function()
        if selectedIsland then
            local args = {
                [1] = selectedIsland
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Teleport"):FireServer(unpack(args))
        end
    end
})


local AutoRankToggle = MainTab:CreateToggle({
    Name = "Auto Rank Up",
    Description = "Automatically Rank Up",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            _G.AutoHatchConnection = game:GetService("RunService").Heartbeat:Connect(function()
                task.spawn(function()
                    task.wait(1)
                    game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("IncreaseMastery"):InvokeServer()
                end)
            end)
        else
            if _G.AutoHatchConnection then
                _G.AutoHatchConnection:Disconnect()
            end
        end
    end
}, "AutoRankToggle")
